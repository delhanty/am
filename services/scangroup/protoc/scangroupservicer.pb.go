// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scangroupservicer.proto

package protoc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NSModuleConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NSModuleConfig) Reset()         { *m = NSModuleConfig{} }
func (m *NSModuleConfig) String() string { return proto.CompactTextString(m) }
func (*NSModuleConfig) ProtoMessage()    {}
func (*NSModuleConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{0}
}
func (m *NSModuleConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NSModuleConfig.Unmarshal(m, b)
}
func (m *NSModuleConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NSModuleConfig.Marshal(b, m, deterministic)
}
func (dst *NSModuleConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NSModuleConfig.Merge(dst, src)
}
func (m *NSModuleConfig) XXX_Size() int {
	return xxx_messageInfo_NSModuleConfig.Size(m)
}
func (m *NSModuleConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NSModuleConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NSModuleConfig proto.InternalMessageInfo

func (m *NSModuleConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BruteModuleConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	CustomSubNames       []string `protobuf:"bytes,2,rep,name=CustomSubNames,proto3" json:"CustomSubNames,omitempty"`
	MaxDepth             int32    `protobuf:"varint,3,opt,name=MaxDepth,proto3" json:"MaxDepth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BruteModuleConfig) Reset()         { *m = BruteModuleConfig{} }
func (m *BruteModuleConfig) String() string { return proto.CompactTextString(m) }
func (*BruteModuleConfig) ProtoMessage()    {}
func (*BruteModuleConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{1}
}
func (m *BruteModuleConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BruteModuleConfig.Unmarshal(m, b)
}
func (m *BruteModuleConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BruteModuleConfig.Marshal(b, m, deterministic)
}
func (dst *BruteModuleConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BruteModuleConfig.Merge(dst, src)
}
func (m *BruteModuleConfig) XXX_Size() int {
	return xxx_messageInfo_BruteModuleConfig.Size(m)
}
func (m *BruteModuleConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BruteModuleConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BruteModuleConfig proto.InternalMessageInfo

func (m *BruteModuleConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BruteModuleConfig) GetCustomSubNames() []string {
	if m != nil {
		return m.CustomSubNames
	}
	return nil
}

func (m *BruteModuleConfig) GetMaxDepth() int32 {
	if m != nil {
		return m.MaxDepth
	}
	return 0
}

type PortModuleConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Ports                []int32  `protobuf:"varint,2,rep,packed,name=Ports,proto3" json:"Ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortModuleConfig) Reset()         { *m = PortModuleConfig{} }
func (m *PortModuleConfig) String() string { return proto.CompactTextString(m) }
func (*PortModuleConfig) ProtoMessage()    {}
func (*PortModuleConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{2}
}
func (m *PortModuleConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortModuleConfig.Unmarshal(m, b)
}
func (m *PortModuleConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortModuleConfig.Marshal(b, m, deterministic)
}
func (dst *PortModuleConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortModuleConfig.Merge(dst, src)
}
func (m *PortModuleConfig) XXX_Size() int {
	return xxx_messageInfo_PortModuleConfig.Size(m)
}
func (m *PortModuleConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PortModuleConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PortModuleConfig proto.InternalMessageInfo

func (m *PortModuleConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PortModuleConfig) GetPorts() []int32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

type WebModuleConfig struct {
	Name                  string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	TakeScreenShots       bool     `protobuf:"varint,2,opt,name=TakeScreenShots,proto3" json:"TakeScreenShots,omitempty"`
	MaxLinks              int32    `protobuf:"varint,3,opt,name=MaxLinks,proto3" json:"MaxLinks,omitempty"`
	ExtractJS             bool     `protobuf:"varint,4,opt,name=ExtractJS,proto3" json:"ExtractJS,omitempty"`
	FingerprintFrameworks bool     `protobuf:"varint,5,opt,name=FingerprintFrameworks,proto3" json:"FingerprintFrameworks,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *WebModuleConfig) Reset()         { *m = WebModuleConfig{} }
func (m *WebModuleConfig) String() string { return proto.CompactTextString(m) }
func (*WebModuleConfig) ProtoMessage()    {}
func (*WebModuleConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{3}
}
func (m *WebModuleConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebModuleConfig.Unmarshal(m, b)
}
func (m *WebModuleConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebModuleConfig.Marshal(b, m, deterministic)
}
func (dst *WebModuleConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebModuleConfig.Merge(dst, src)
}
func (m *WebModuleConfig) XXX_Size() int {
	return xxx_messageInfo_WebModuleConfig.Size(m)
}
func (m *WebModuleConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WebModuleConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WebModuleConfig proto.InternalMessageInfo

func (m *WebModuleConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WebModuleConfig) GetTakeScreenShots() bool {
	if m != nil {
		return m.TakeScreenShots
	}
	return false
}

func (m *WebModuleConfig) GetMaxLinks() int32 {
	if m != nil {
		return m.MaxLinks
	}
	return 0
}

func (m *WebModuleConfig) GetExtractJS() bool {
	if m != nil {
		return m.ExtractJS
	}
	return false
}

func (m *WebModuleConfig) GetFingerprintFrameworks() bool {
	if m != nil {
		return m.FingerprintFrameworks
	}
	return false
}

type GroupConfiguration struct {
	NSConfig             *NSModuleConfig    `protobuf:"bytes,1,opt,name=NSConfig,proto3" json:"NSConfig,omitempty"`
	BruteConfig          *BruteModuleConfig `protobuf:"bytes,2,opt,name=BruteConfig,proto3" json:"BruteConfig,omitempty"`
	PortConfig           *PortModuleConfig  `protobuf:"bytes,3,opt,name=PortConfig,proto3" json:"PortConfig,omitempty"`
	WebModuleConfig      *WebModuleConfig   `protobuf:"bytes,4,opt,name=WebModuleConfig,proto3" json:"WebModuleConfig,omitempty"`
	DailyScanSchedules   []int64            `protobuf:"varint,5,rep,packed,name=DailyScanSchedules,proto3" json:"DailyScanSchedules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GroupConfiguration) Reset()         { *m = GroupConfiguration{} }
func (m *GroupConfiguration) String() string { return proto.CompactTextString(m) }
func (*GroupConfiguration) ProtoMessage()    {}
func (*GroupConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{4}
}
func (m *GroupConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupConfiguration.Unmarshal(m, b)
}
func (m *GroupConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupConfiguration.Marshal(b, m, deterministic)
}
func (dst *GroupConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupConfiguration.Merge(dst, src)
}
func (m *GroupConfiguration) XXX_Size() int {
	return xxx_messageInfo_GroupConfiguration.Size(m)
}
func (m *GroupConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_GroupConfiguration proto.InternalMessageInfo

func (m *GroupConfiguration) GetNSConfig() *NSModuleConfig {
	if m != nil {
		return m.NSConfig
	}
	return nil
}

func (m *GroupConfiguration) GetBruteConfig() *BruteModuleConfig {
	if m != nil {
		return m.BruteConfig
	}
	return nil
}

func (m *GroupConfiguration) GetPortConfig() *PortModuleConfig {
	if m != nil {
		return m.PortConfig
	}
	return nil
}

func (m *GroupConfiguration) GetWebModuleConfig() *WebModuleConfig {
	if m != nil {
		return m.WebModuleConfig
	}
	return nil
}

func (m *GroupConfiguration) GetDailyScanSchedules() []int64 {
	if m != nil {
		return m.DailyScanSchedules
	}
	return nil
}

type Group struct {
	OrgID                int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	GroupID              int32    `protobuf:"varint,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupName            string   `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	CreationTime         int64    `protobuf:"varint,4,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
	CreatedBy            int32    `protobuf:"varint,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	OriginalInput        []byte   `protobuf:"bytes,6,opt,name=OriginalInput,proto3" json:"OriginalInput,omitempty"`
	Deleted              bool     `protobuf:"varint,7,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{5}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *Group) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *Group) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *Group) GetCreationTime() int64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *Group) GetCreatedBy() int32 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *Group) GetOriginalInput() []byte {
	if m != nil {
		return m.OriginalInput
	}
	return nil
}

func (m *Group) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type GroupVersion struct {
	OrgID                int32               `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	GroupID              int32               `protobuf:"varint,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupVersionID       int32               `protobuf:"varint,3,opt,name=GroupVersionID,proto3" json:"GroupVersionID,omitempty"`
	VersionName          string              `protobuf:"bytes,4,opt,name=VersionName,proto3" json:"VersionName,omitempty"`
	CreationTime         int64               `protobuf:"varint,5,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
	CreatedBy            int32               `protobuf:"varint,6,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	Configuration        *GroupConfiguration `protobuf:"bytes,7,opt,name=Configuration,proto3" json:"Configuration,omitempty"`
	Deleted              bool                `protobuf:"varint,8,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GroupVersion) Reset()         { *m = GroupVersion{} }
func (m *GroupVersion) String() string { return proto.CompactTextString(m) }
func (*GroupVersion) ProtoMessage()    {}
func (*GroupVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{6}
}
func (m *GroupVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupVersion.Unmarshal(m, b)
}
func (m *GroupVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupVersion.Marshal(b, m, deterministic)
}
func (dst *GroupVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupVersion.Merge(dst, src)
}
func (m *GroupVersion) XXX_Size() int {
	return xxx_messageInfo_GroupVersion.Size(m)
}
func (m *GroupVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupVersion.DiscardUnknown(m)
}

var xxx_messageInfo_GroupVersion proto.InternalMessageInfo

func (m *GroupVersion) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *GroupVersion) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *GroupVersion) GetGroupVersionID() int32 {
	if m != nil {
		return m.GroupVersionID
	}
	return 0
}

func (m *GroupVersion) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *GroupVersion) GetCreationTime() int64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *GroupVersion) GetCreatedBy() int32 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *GroupVersion) GetConfiguration() *GroupConfiguration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *GroupVersion) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type NewGroupRequest struct {
	Group                *Group        `protobuf:"bytes,1,opt,name=Group,proto3" json:"Group,omitempty"`
	Version              *GroupVersion `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NewGroupRequest) Reset()         { *m = NewGroupRequest{} }
func (m *NewGroupRequest) String() string { return proto.CompactTextString(m) }
func (*NewGroupRequest) ProtoMessage()    {}
func (*NewGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{7}
}
func (m *NewGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGroupRequest.Unmarshal(m, b)
}
func (m *NewGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGroupRequest.Marshal(b, m, deterministic)
}
func (dst *NewGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGroupRequest.Merge(dst, src)
}
func (m *NewGroupRequest) XXX_Size() int {
	return xxx_messageInfo_NewGroupRequest.Size(m)
}
func (m *NewGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewGroupRequest proto.InternalMessageInfo

func (m *NewGroupRequest) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *NewGroupRequest) GetVersion() *GroupVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

type NewVersionRequest struct {
	Version              *GroupVersion `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NewVersionRequest) Reset()         { *m = NewVersionRequest{} }
func (m *NewVersionRequest) String() string { return proto.CompactTextString(m) }
func (*NewVersionRequest) ProtoMessage()    {}
func (*NewVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{8}
}
func (m *NewVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewVersionRequest.Unmarshal(m, b)
}
func (m *NewVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewVersionRequest.Marshal(b, m, deterministic)
}
func (dst *NewVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewVersionRequest.Merge(dst, src)
}
func (m *NewVersionRequest) XXX_Size() int {
	return xxx_messageInfo_NewVersionRequest.Size(m)
}
func (m *NewVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewVersionRequest proto.InternalMessageInfo

func (m *NewVersionRequest) GetVersion() *GroupVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

type VersionRequest struct {
	OrgID                int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	GroupID              int32    `protobuf:"varint,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupVersionID       int32    `protobuf:"varint,3,opt,name=GroupVersionID,proto3" json:"GroupVersionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{9}
}
func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (dst *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(dst, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

func (m *VersionRequest) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *VersionRequest) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *VersionRequest) GetGroupVersionID() int32 {
	if m != nil {
		return m.GroupVersionID
	}
	return 0
}

type VersionCreatedResponse struct {
	GroupID              int32    `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupVersionID       int32    `protobuf:"varint,2,opt,name=GroupVersionID,proto3" json:"GroupVersionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionCreatedResponse) Reset()         { *m = VersionCreatedResponse{} }
func (m *VersionCreatedResponse) String() string { return proto.CompactTextString(m) }
func (*VersionCreatedResponse) ProtoMessage()    {}
func (*VersionCreatedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{10}
}
func (m *VersionCreatedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionCreatedResponse.Unmarshal(m, b)
}
func (m *VersionCreatedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionCreatedResponse.Marshal(b, m, deterministic)
}
func (dst *VersionCreatedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionCreatedResponse.Merge(dst, src)
}
func (m *VersionCreatedResponse) XXX_Size() int {
	return xxx_messageInfo_VersionCreatedResponse.Size(m)
}
func (m *VersionCreatedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionCreatedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionCreatedResponse proto.InternalMessageInfo

func (m *VersionCreatedResponse) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *VersionCreatedResponse) GetGroupVersionID() int32 {
	if m != nil {
		return m.GroupVersionID
	}
	return 0
}

type DeleteGroupRequest struct {
	OrgID                int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	GroupID              int32    `protobuf:"varint,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGroupRequest) Reset()         { *m = DeleteGroupRequest{} }
func (m *DeleteGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGroupRequest) ProtoMessage()    {}
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{11}
}
func (m *DeleteGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGroupRequest.Unmarshal(m, b)
}
func (m *DeleteGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGroupRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGroupRequest.Merge(dst, src)
}
func (m *DeleteGroupRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGroupRequest.Size(m)
}
func (m *DeleteGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGroupRequest proto.InternalMessageInfo

func (m *DeleteGroupRequest) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *DeleteGroupRequest) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

type GroupDeletedResponse struct {
	OrgID                int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	GroupID              int32    `protobuf:"varint,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupDeletedResponse) Reset()         { *m = GroupDeletedResponse{} }
func (m *GroupDeletedResponse) String() string { return proto.CompactTextString(m) }
func (*GroupDeletedResponse) ProtoMessage()    {}
func (*GroupDeletedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{12}
}
func (m *GroupDeletedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupDeletedResponse.Unmarshal(m, b)
}
func (m *GroupDeletedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupDeletedResponse.Marshal(b, m, deterministic)
}
func (dst *GroupDeletedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupDeletedResponse.Merge(dst, src)
}
func (m *GroupDeletedResponse) XXX_Size() int {
	return xxx_messageInfo_GroupDeletedResponse.Size(m)
}
func (m *GroupDeletedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupDeletedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GroupDeletedResponse proto.InternalMessageInfo

func (m *GroupDeletedResponse) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *GroupDeletedResponse) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

type DeleteVersionRequest struct {
	OrgID                int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	GroupID              int32    `protobuf:"varint,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupVersionID       int32    `protobuf:"varint,3,opt,name=GroupVersionID,proto3" json:"GroupVersionID,omitempty"`
	VersionName          string   `protobuf:"bytes,4,opt,name=VersionName,proto3" json:"VersionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVersionRequest) Reset()         { *m = DeleteVersionRequest{} }
func (m *DeleteVersionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVersionRequest) ProtoMessage()    {}
func (*DeleteVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{13}
}
func (m *DeleteVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVersionRequest.Unmarshal(m, b)
}
func (m *DeleteVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVersionRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVersionRequest.Merge(dst, src)
}
func (m *DeleteVersionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVersionRequest.Size(m)
}
func (m *DeleteVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVersionRequest proto.InternalMessageInfo

func (m *DeleteVersionRequest) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *DeleteVersionRequest) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *DeleteVersionRequest) GetGroupVersionID() int32 {
	if m != nil {
		return m.GroupVersionID
	}
	return 0
}

func (m *DeleteVersionRequest) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

type VersionDeletedResponse struct {
	GroupID              int32    `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupVersionID       int32    `protobuf:"varint,2,opt,name=GroupVersionID,proto3" json:"GroupVersionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionDeletedResponse) Reset()         { *m = VersionDeletedResponse{} }
func (m *VersionDeletedResponse) String() string { return proto.CompactTextString(m) }
func (*VersionDeletedResponse) ProtoMessage()    {}
func (*VersionDeletedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{14}
}
func (m *VersionDeletedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionDeletedResponse.Unmarshal(m, b)
}
func (m *VersionDeletedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionDeletedResponse.Marshal(b, m, deterministic)
}
func (dst *VersionDeletedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionDeletedResponse.Merge(dst, src)
}
func (m *VersionDeletedResponse) XXX_Size() int {
	return xxx_messageInfo_VersionDeletedResponse.Size(m)
}
func (m *VersionDeletedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionDeletedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionDeletedResponse proto.InternalMessageInfo

func (m *VersionDeletedResponse) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *VersionDeletedResponse) GetGroupVersionID() int32 {
	if m != nil {
		return m.GroupVersionID
	}
	return 0
}

type GroupRequest struct {
	OrgID                int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	GroupID              int32    `protobuf:"varint,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupVersionID       int32    `protobuf:"varint,3,opt,name=GroupVersionID,proto3" json:"GroupVersionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupRequest) Reset()         { *m = GroupRequest{} }
func (m *GroupRequest) String() string { return proto.CompactTextString(m) }
func (*GroupRequest) ProtoMessage()    {}
func (*GroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{15}
}
func (m *GroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRequest.Unmarshal(m, b)
}
func (m *GroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRequest.Marshal(b, m, deterministic)
}
func (dst *GroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRequest.Merge(dst, src)
}
func (m *GroupRequest) XXX_Size() int {
	return xxx_messageInfo_GroupRequest.Size(m)
}
func (m *GroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRequest proto.InternalMessageInfo

func (m *GroupRequest) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *GroupRequest) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *GroupRequest) GetGroupVersionID() int32 {
	if m != nil {
		return m.GroupVersionID
	}
	return 0
}

type GroupsRequest struct {
	OrgID                int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupsRequest) Reset()         { *m = GroupsRequest{} }
func (m *GroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GroupsRequest) ProtoMessage()    {}
func (*GroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scangroupservicer_1967062ae49101c2, []int{16}
}
func (m *GroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupsRequest.Unmarshal(m, b)
}
func (m *GroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupsRequest.Marshal(b, m, deterministic)
}
func (dst *GroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupsRequest.Merge(dst, src)
}
func (m *GroupsRequest) XXX_Size() int {
	return xxx_messageInfo_GroupsRequest.Size(m)
}
func (m *GroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupsRequest proto.InternalMessageInfo

func (m *GroupsRequest) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func init() {
	proto.RegisterType((*NSModuleConfig)(nil), "NSModuleConfig")
	proto.RegisterType((*BruteModuleConfig)(nil), "BruteModuleConfig")
	proto.RegisterType((*PortModuleConfig)(nil), "PortModuleConfig")
	proto.RegisterType((*WebModuleConfig)(nil), "WebModuleConfig")
	proto.RegisterType((*GroupConfiguration)(nil), "GroupConfiguration")
	proto.RegisterType((*Group)(nil), "Group")
	proto.RegisterType((*GroupVersion)(nil), "GroupVersion")
	proto.RegisterType((*NewGroupRequest)(nil), "NewGroupRequest")
	proto.RegisterType((*NewVersionRequest)(nil), "NewVersionRequest")
	proto.RegisterType((*VersionRequest)(nil), "VersionRequest")
	proto.RegisterType((*VersionCreatedResponse)(nil), "VersionCreatedResponse")
	proto.RegisterType((*DeleteGroupRequest)(nil), "DeleteGroupRequest")
	proto.RegisterType((*GroupDeletedResponse)(nil), "GroupDeletedResponse")
	proto.RegisterType((*DeleteVersionRequest)(nil), "DeleteVersionRequest")
	proto.RegisterType((*VersionDeletedResponse)(nil), "VersionDeletedResponse")
	proto.RegisterType((*GroupRequest)(nil), "GroupRequest")
	proto.RegisterType((*GroupsRequest)(nil), "GroupsRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScanGroupClient is the client API for ScanGroup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScanGroupClient interface {
	Create(ctx context.Context, in *NewGroupRequest, opts ...grpc.CallOption) (*VersionCreatedResponse, error)
	Delete(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*GroupDeletedResponse, error)
	GetVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*GroupVersion, error)
	CreateVersion(ctx context.Context, in *NewVersionRequest, opts ...grpc.CallOption) (*VersionCreatedResponse, error)
	DeleteVersion(ctx context.Context, in *DeleteVersionRequest, opts ...grpc.CallOption) (*VersionDeletedResponse, error)
	Groups(ctx context.Context, in *GroupsRequest, opts ...grpc.CallOption) (ScanGroup_GroupsClient, error)
	Get(ctx context.Context, in *GroupRequest, opts ...grpc.CallOption) (*Group, error)
}

type scanGroupClient struct {
	cc *grpc.ClientConn
}

func NewScanGroupClient(cc *grpc.ClientConn) ScanGroupClient {
	return &scanGroupClient{cc}
}

func (c *scanGroupClient) Create(ctx context.Context, in *NewGroupRequest, opts ...grpc.CallOption) (*VersionCreatedResponse, error) {
	out := new(VersionCreatedResponse)
	err := c.cc.Invoke(ctx, "/ScanGroup/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scanGroupClient) Delete(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*GroupDeletedResponse, error) {
	out := new(GroupDeletedResponse)
	err := c.cc.Invoke(ctx, "/ScanGroup/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scanGroupClient) GetVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*GroupVersion, error) {
	out := new(GroupVersion)
	err := c.cc.Invoke(ctx, "/ScanGroup/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scanGroupClient) CreateVersion(ctx context.Context, in *NewVersionRequest, opts ...grpc.CallOption) (*VersionCreatedResponse, error) {
	out := new(VersionCreatedResponse)
	err := c.cc.Invoke(ctx, "/ScanGroup/CreateVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scanGroupClient) DeleteVersion(ctx context.Context, in *DeleteVersionRequest, opts ...grpc.CallOption) (*VersionDeletedResponse, error) {
	out := new(VersionDeletedResponse)
	err := c.cc.Invoke(ctx, "/ScanGroup/DeleteVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scanGroupClient) Groups(ctx context.Context, in *GroupsRequest, opts ...grpc.CallOption) (ScanGroup_GroupsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ScanGroup_serviceDesc.Streams[0], "/ScanGroup/Groups", opts...)
	if err != nil {
		return nil, err
	}
	x := &scanGroupGroupsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ScanGroup_GroupsClient interface {
	Recv() (*Group, error)
	grpc.ClientStream
}

type scanGroupGroupsClient struct {
	grpc.ClientStream
}

func (x *scanGroupGroupsClient) Recv() (*Group, error) {
	m := new(Group)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *scanGroupClient) Get(ctx context.Context, in *GroupRequest, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/ScanGroup/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScanGroupServer is the server API for ScanGroup service.
type ScanGroupServer interface {
	Create(context.Context, *NewGroupRequest) (*VersionCreatedResponse, error)
	Delete(context.Context, *DeleteGroupRequest) (*GroupDeletedResponse, error)
	GetVersion(context.Context, *VersionRequest) (*GroupVersion, error)
	CreateVersion(context.Context, *NewVersionRequest) (*VersionCreatedResponse, error)
	DeleteVersion(context.Context, *DeleteVersionRequest) (*VersionDeletedResponse, error)
	Groups(*GroupsRequest, ScanGroup_GroupsServer) error
	Get(context.Context, *GroupRequest) (*Group, error)
}

func RegisterScanGroupServer(s *grpc.Server, srv ScanGroupServer) {
	s.RegisterService(&_ScanGroup_serviceDesc, srv)
}

func _ScanGroup_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScanGroupServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ScanGroup/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScanGroupServer).Create(ctx, req.(*NewGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScanGroup_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScanGroupServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ScanGroup/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScanGroupServer).Delete(ctx, req.(*DeleteGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScanGroup_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScanGroupServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ScanGroup/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScanGroupServer).GetVersion(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScanGroup_CreateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScanGroupServer).CreateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ScanGroup/CreateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScanGroupServer).CreateVersion(ctx, req.(*NewVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScanGroup_DeleteVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScanGroupServer).DeleteVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ScanGroup/DeleteVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScanGroupServer).DeleteVersion(ctx, req.(*DeleteVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScanGroup_Groups_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GroupsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ScanGroupServer).Groups(m, &scanGroupGroupsServer{stream})
}

type ScanGroup_GroupsServer interface {
	Send(*Group) error
	grpc.ServerStream
}

type scanGroupGroupsServer struct {
	grpc.ServerStream
}

func (x *scanGroupGroupsServer) Send(m *Group) error {
	return x.ServerStream.SendMsg(m)
}

func _ScanGroup_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScanGroupServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ScanGroup/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScanGroupServer).Get(ctx, req.(*GroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScanGroup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ScanGroup",
	HandlerType: (*ScanGroupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ScanGroup_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ScanGroup_Delete_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _ScanGroup_GetVersion_Handler,
		},
		{
			MethodName: "CreateVersion",
			Handler:    _ScanGroup_CreateVersion_Handler,
		},
		{
			MethodName: "DeleteVersion",
			Handler:    _ScanGroup_DeleteVersion_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ScanGroup_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Groups",
			Handler:       _ScanGroup_Groups_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "scangroupservicer.proto",
}

func init() {
	proto.RegisterFile("scangroupservicer.proto", fileDescriptor_scangroupservicer_1967062ae49101c2)
}

var fileDescriptor_scangroupservicer_1967062ae49101c2 = []byte{
	// 783 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x4e, 0xdb, 0x40,
	0x10, 0x96, 0x63, 0x1c, 0x92, 0x09, 0x49, 0x60, 0x81, 0x62, 0x45, 0x1c, 0x22, 0x8b, 0xd2, 0x48,
	0xad, 0x56, 0x6d, 0xe0, 0xd2, 0x0a, 0xa9, 0x12, 0xa4, 0xa0, 0x54, 0x25, 0x54, 0x6b, 0xd4, 0x56,
	0xdc, 0x4c, 0x58, 0x12, 0x2b, 0x89, 0x9d, 0xae, 0xed, 0x02, 0x6f, 0xd1, 0x53, 0xaf, 0x7d, 0x94,
	0x3e, 0x46, 0x9f, 0xa0, 0xef, 0x51, 0x79, 0xbc, 0x21, 0xfe, 0x09, 0x44, 0xa8, 0xa2, 0xa7, 0x78,
	0xbe, 0x9d, 0x99, 0x9d, 0xf9, 0xe6, 0x9b, 0x55, 0x60, 0xc3, 0xeb, 0x5a, 0x4e, 0x4f, 0xb8, 0xc1,
	0xd8, 0xe3, 0xe2, 0x9b, 0xdd, 0xe5, 0x82, 0x8e, 0x85, 0xeb, 0xbb, 0xc6, 0x16, 0x54, 0x3a, 0xe6,
	0xb1, 0x7b, 0x11, 0x0c, 0xf9, 0x81, 0xeb, 0x5c, 0xda, 0x3d, 0x42, 0x60, 0xa1, 0x63, 0x8d, 0xb8,
	0xae, 0xd4, 0x95, 0x46, 0x91, 0xe1, 0xb7, 0x31, 0x80, 0x95, 0x7d, 0x11, 0xf8, 0x7c, 0x9e, 0x23,
	0xd9, 0x86, 0xca, 0x41, 0xe0, 0xf9, 0xee, 0xc8, 0x0c, 0xce, 0x43, 0xc0, 0xd3, 0x73, 0x75, 0xb5,
	0x51, 0x64, 0x29, 0x94, 0xd4, 0xa0, 0x70, 0x6c, 0x5d, 0xb7, 0xf8, 0xd8, 0xef, 0xeb, 0x6a, 0x5d,
	0x69, 0x68, 0xec, 0xd6, 0x36, 0xf6, 0x60, 0xf9, 0xa3, 0x2b, 0xfc, 0xb9, 0x77, 0xad, 0x81, 0x16,
	0xfa, 0x45, 0x57, 0x68, 0x2c, 0x32, 0x8c, 0x5f, 0x0a, 0x54, 0x3f, 0xf3, 0xf3, 0xb9, 0xd1, 0x0d,
	0xa8, 0x9e, 0x5a, 0x03, 0x6e, 0x76, 0x05, 0xe7, 0x8e, 0xd9, 0x77, 0x31, 0x8f, 0xd2, 0x28, 0xb0,
	0x34, 0x2c, 0x6b, 0xfd, 0x60, 0x3b, 0x03, 0x2f, 0x56, 0x2b, 0xda, 0x64, 0x13, 0x8a, 0xef, 0xae,
	0x7d, 0x61, 0x75, 0xfd, 0xf7, 0xa6, 0xbe, 0x80, 0xf1, 0x53, 0x80, 0xec, 0xc2, 0xfa, 0xa1, 0xed,
	0xf4, 0xb8, 0x18, 0x0b, 0xdb, 0xf1, 0x0f, 0x85, 0x35, 0xe2, 0x57, 0xae, 0x18, 0x78, 0xba, 0x86,
	0x9e, 0xb3, 0x0f, 0x8d, 0x1f, 0x39, 0x20, 0x47, 0xe1, 0xa8, 0xa2, 0xea, 0x03, 0x61, 0xf9, 0xb6,
	0xeb, 0x90, 0xe7, 0x50, 0xe8, 0x98, 0x11, 0x84, 0x8d, 0x94, 0x9a, 0x55, 0x9a, 0x1c, 0x1d, 0xbb,
	0x75, 0x20, 0xbb, 0x50, 0xc2, 0x81, 0x49, 0xff, 0x1c, 0xfa, 0x13, 0x9a, 0x19, 0x22, 0x8b, 0xbb,
	0x91, 0x57, 0x00, 0x21, 0x89, 0x32, 0x48, 0xc5, 0xa0, 0x15, 0x9a, 0x1e, 0x06, 0x8b, 0x39, 0x91,
	0x37, 0x19, 0xb6, 0x91, 0x86, 0x52, 0x73, 0x99, 0xa6, 0x70, 0x96, 0x19, 0x0b, 0x05, 0xd2, 0xb2,
	0xec, 0xe1, 0x8d, 0xd9, 0xb5, 0x1c, 0xb3, 0xdb, 0xe7, 0xe1, 0x51, 0xc8, 0x8d, 0xda, 0x50, 0xd9,
	0x8c, 0x13, 0xe3, 0xb7, 0x02, 0x1a, 0x12, 0x13, 0x8e, 0xfe, 0x44, 0xf4, 0xda, 0x2d, 0x24, 0x42,
	0x63, 0x91, 0x41, 0x74, 0x58, 0xc4, 0xe3, 0x76, 0x0b, 0x1b, 0xd6, 0xd8, 0xc4, 0x0c, 0xc7, 0x84,
	0x9f, 0xa8, 0x02, 0x15, 0x55, 0x30, 0x05, 0x88, 0x01, 0x4b, 0x07, 0x82, 0x23, 0xcb, 0xa7, 0xf6,
	0x88, 0x63, 0x03, 0x2a, 0x4b, 0x60, 0x61, 0x06, 0xb4, 0xf9, 0xc5, 0xfe, 0x0d, 0x8e, 0x4f, 0x63,
	0x53, 0x80, 0x6c, 0x41, 0xf9, 0x44, 0xd8, 0x3d, 0xdb, 0xb1, 0x86, 0x6d, 0x67, 0x1c, 0xf8, 0x7a,
	0xbe, 0xae, 0x34, 0x96, 0x58, 0x12, 0x0c, 0xeb, 0x6b, 0xf1, 0x21, 0xf7, 0xf9, 0x85, 0xbe, 0x88,
	0x02, 0x98, 0x98, 0xc6, 0xcf, 0x1c, 0x2c, 0x61, 0x3d, 0x9f, 0xb8, 0xf0, 0xc2, 0x61, 0x3f, 0xb4,
	0xc1, 0x6d, 0xa8, 0xc4, 0xe3, 0xdb, 0x2d, 0xa9, 0xd4, 0x14, 0x4a, 0xea, 0x50, 0x92, 0x06, 0x52,
	0xb1, 0x80, 0x54, 0xc4, 0xa1, 0x0c, 0x19, 0xda, 0x3c, 0x32, 0xf2, 0x69, 0x32, 0x5e, 0x43, 0x39,
	0xa1, 0x5c, 0x6c, 0xb6, 0xd4, 0x5c, 0xa5, 0x59, 0x51, 0xb3, 0xa4, 0x67, 0x9c, 0xa1, 0x42, 0x92,
	0xa1, 0x2f, 0x50, 0xed, 0xf0, 0x2b, 0xcc, 0xc0, 0xf8, 0xd7, 0x80, 0x7b, 0x3e, 0xd9, 0x94, 0x6a,
	0x90, 0xdb, 0x90, 0x8f, 0xf2, 0x33, 0x29, 0x91, 0x67, 0xb0, 0x28, 0xdb, 0x92, 0xea, 0x2f, 0xd3,
	0x38, 0x17, 0x6c, 0x72, 0x6a, 0xec, 0xc1, 0x4a, 0x87, 0x5f, 0x4d, 0x60, 0x99, 0x3b, 0x16, 0xad,
	0xdc, 0x1b, 0xdd, 0x87, 0x4a, 0x2a, 0xf4, 0x91, 0x46, 0x67, 0x9c, 0xc1, 0x13, 0x69, 0x48, 0xaa,
	0x19, 0xf7, 0xc6, 0xae, 0xe3, 0xf1, 0x78, 0x6e, 0x65, 0x5e, 0xee, 0xdc, 0xcc, 0xdc, 0x2d, 0x20,
	0x11, 0xd1, 0x09, 0x82, 0x1f, 0xd8, 0x89, 0x71, 0x08, 0x6b, 0xf8, 0x29, 0x67, 0x76, 0x5b, 0xdf,
	0x43, 0xf3, 0x7c, 0x57, 0x60, 0x2d, 0xca, 0xf1, 0x7f, 0xa8, 0x9d, 0xbf, 0x15, 0x31, 0xf2, 0xd3,
	0xcd, 0xfd, 0x3b, 0xf9, 0x97, 0x72, 0xf7, 0x1f, 0x5b, 0x40, 0x4f, 0xa1, 0x8c, 0x88, 0x77, 0xef,
	0x45, 0xcd, 0x3f, 0x39, 0x28, 0x86, 0xef, 0x6e, 0xb4, 0x46, 0x3b, 0x90, 0x8f, 0xe4, 0x46, 0x96,
	0x69, 0x6a, 0x01, 0x6b, 0x1b, 0xf4, 0x0e, 0x41, 0xee, 0x42, 0x3e, 0xa2, 0x89, 0xac, 0xd2, 0xac,
	0xae, 0x6a, 0xeb, 0x74, 0xa6, 0x4c, 0x5e, 0x00, 0x1c, 0x71, 0x7f, 0xf2, 0x02, 0x56, 0x69, 0x72,
	0xf8, 0xb5, 0xe4, 0x06, 0x92, 0x3d, 0x28, 0x47, 0xd7, 0x4e, 0x00, 0x42, 0x33, 0x6b, 0x7c, 0x77,
	0x85, 0x6f, 0xa1, 0x9c, 0x50, 0x18, 0x59, 0xa7, 0xb3, 0x14, 0x37, 0x4d, 0x90, 0x2e, 0xd6, 0x80,
	0x7c, 0x44, 0x26, 0xa9, 0xd0, 0x04, 0xab, 0x35, 0xf9, 0x0e, 0xbd, 0x54, 0xc8, 0x26, 0xa8, 0x47,
	0xdc, 0x27, 0xb2, 0xf0, 0xd4, 0xf9, 0x7e, 0xe1, 0x2c, 0x8f, 0x7f, 0xc1, 0xba, 0xe7, 0xd1, 0xef,
	0xce, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x93, 0xaa, 0x85, 0xe7, 0xa5, 0x09, 0x00, 0x00,
}
